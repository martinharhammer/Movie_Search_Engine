# This workflow will
# - install elasticsearch
# - start elasticsearch
# - download and preprocess data
# - index data
# - run tests on search service

name: Python application

on:
  push:
    branches: [ "main", "add-data" ]

permissions:
  contents: read

jobs:
  test-search-engine:
    name: Test search engine
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elasticsearch: ["8.4.3"]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Start Elasticsearch
      uses: ./elasticsearch
      with:
        security-enabled: false
        stack-version: ${{ matrix.elasticsearch }}
    - name: Elasticsearch is reachable
      run: |
        curl --verbose --show-error http://localhost:9200
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install .
    - name: Download and preprocess data
      run: |
        python ir_exercise/preprocessor.py -d
    - name: Index data
      run: |
        python ir_exercise/indexer.py -r
    - name: Print student id
      if: always()
      run: |
        pytest ir_exercise/test/test_pre_task.py
        echo "Student id:"
        cat student_id.txt
    - name: Test search service - Milestone 1
      if: always()
      run: |
        pytest ir_exercise/test/test_milestone_1.py | tee test_milestone_1.log
    - name: Print results - Milestone 1
      if: always()
      run: |
        tail -1 test_milestone_1.log | sed 's/.* \([0-9]\+ failed\(, [0-9]\+ passed\)\?\).*/\1/g'
    - name: Test search service - Milestone 2
      if: always()
      run: |
        pytest ir_exercise/test/test_milestone_2.py | tee test_milestone_2.log
    - name: Print results - Milestone 2
      if: always()
      run: |
        tail -1 test_milestone_2.log | sed 's/.* \([0-9]\+ failed\(, [0-9]\+ passed\)\?\).*/\1/g'